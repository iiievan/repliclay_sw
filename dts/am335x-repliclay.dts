/*
 * Copyright (C) 2012 Texas Instruments Incorporated - http://www.ti.com/
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */
/dts-v1/;

#include "am33xx.dtsi"
#include "am335x-bone-common.dtsi"
#include <dt-bindings/display/tda998x.h>

/ {
	model = "AM335x repliclay";
	compatible = "ti,am335x-bone-black", "ti,am335x-bone", "ti,am33xx";

	exclusive-use = "P9.22";	/* Dallas 1Wire uses */

	/** Free up the pins used by dallas 1Wire from the pinmux helpers.**/
	ocp {
		P9_22_pinmux { status = "disabled"; };		/* (P9_22) gpio0_2.DALLAS_W1 */
	};
};

&ldo3_reg {
	regulator-min-microvolt = <1800000>;
	regulator-max-microvolt = <1800000>;
	regulator-always-on;
};

&mmc1 {
	vmmc-supply = <&vmmcsd_fixed>;
};

&mmc2 {
	vmmc-supply = <&vmmcsd_fixed>;
	pinctrl-names = "default";
	pinctrl-0 = <&emmc_pins>;
	bus-width = <8>;
	status = "okay";
};

&am33xx_pinmux {
	nxp_hdmi_bonelt_pins: nxp_hdmi_bonelt_pins {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x9b0, PIN_OUTPUT_PULLDOWN | MUX_MODE3)	/* xdma_event_intr0 */
			AM33XX_IOPAD(0x8a0, PIN_OUTPUT | MUX_MODE0)				/* lcd_data0.lcd_data0 */
			AM33XX_IOPAD(0x8a4, PIN_OUTPUT | MUX_MODE0)				/* lcd_data1.lcd_data1 */
			AM33XX_IOPAD(0x8a8, PIN_OUTPUT | MUX_MODE0)				/* lcd_data2.lcd_data2 */
			AM33XX_IOPAD(0x8ac, PIN_OUTPUT | MUX_MODE0)				/* lcd_data3.lcd_data3 */
			AM33XX_IOPAD(0x8b0, PIN_OUTPUT | MUX_MODE0)				/* lcd_data4.lcd_data4 */
			AM33XX_IOPAD(0x8b4, PIN_OUTPUT | MUX_MODE0)				/* lcd_data5.lcd_data5 */
			AM33XX_IOPAD(0x8b8, PIN_OUTPUT | MUX_MODE0)				/* lcd_data6.lcd_data6 */
			AM33XX_IOPAD(0x8bc, PIN_OUTPUT | MUX_MODE0)				/* lcd_data7.lcd_data7 */
			AM33XX_IOPAD(0x8c0, PIN_OUTPUT | MUX_MODE0)				/* lcd_data8.lcd_data8 */
			AM33XX_IOPAD(0x8c4, PIN_OUTPUT | MUX_MODE0)				/* lcd_data9.lcd_data9 */
			AM33XX_IOPAD(0x8c8, PIN_OUTPUT | MUX_MODE0)				/* lcd_data10.lcd_data10 */
			AM33XX_IOPAD(0x8cc, PIN_OUTPUT | MUX_MODE0)				/* lcd_data11.lcd_data11 */
			AM33XX_IOPAD(0x8d0, PIN_OUTPUT | MUX_MODE0)				/* lcd_data12.lcd_data12 */
			AM33XX_IOPAD(0x8d4, PIN_OUTPUT | MUX_MODE0)				/* lcd_data13.lcd_data13 */
			AM33XX_IOPAD(0x8d8, PIN_OUTPUT | MUX_MODE0)				/* lcd_data14.lcd_data14 */
			AM33XX_IOPAD(0x8dc, PIN_OUTPUT | MUX_MODE0)				/* lcd_data15.lcd_data15 */
			AM33XX_IOPAD(0x8e0, PIN_OUTPUT_PULLDOWN | MUX_MODE0)	/* lcd_vsync.lcd_vsync */
			AM33XX_IOPAD(0x8e4, PIN_OUTPUT_PULLDOWN | MUX_MODE0)	/* lcd_hsync.lcd_hsync */
			AM33XX_IOPAD(0x8e8, PIN_OUTPUT_PULLDOWN | MUX_MODE0)	/* lcd_pclk.lcd_pclk */
			AM33XX_IOPAD(0x8ec, PIN_OUTPUT_PULLDOWN | MUX_MODE0)	/* lcd_ac_bias_en.lcd_ac_bias_en */
		>;
	};

	nxp_hdmi_bonelt_off_pins: nxp_hdmi_bonelt_off_pins {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x9b0, PIN_OUTPUT_PULLDOWN | MUX_MODE3)	/* xdma_event_intr0 */
		>;
	};

	dcan1_pins: pinmux_dcan1_pins {
		pinctrl-single,pins = <			
			AM33XX_IOPAD(0x968, PIN_OUTPUT | MUX_MODE2) 			/* uart1_rxd.dcan1_tx */			
			AM33XX_IOPAD(0x96C, PIN_INPUT_PULLDOWN | MUX_MODE2) 	/* uart1_txd.dcan1_rx */			
		>;
	};
	dcan1_stb_pins: pinmux_dcan1_stb_pins {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x9A4, PIN_OUTPUT | MUX_MODE7) 			/* gpio3_19.gpio3_19 */
		>;
	};

	/** transfer "END_STOP_Y_2" P9.28->P9.29**/
	/** transfer "SPI_CS1" P9.42->P9.28**/
	spi1_pins: pinmux_spi1_pins {
		pinctrl-single,pins = <			
			AM33XX_IOPAD(0x990, PIN_INPUT | MUX_MODE3) 				/* spi1_sclk.SPI_SCLK */					
			AM33XX_IOPAD(0x998, PIN_INPUT | MUX_MODE3) 				/* spi1_d1.SPI_MOSI */			
			AM33XX_IOPAD(0x99C, PIN_OUTPUT | MUX_MODE3) 			/* spi1_cs0.SPI_CS1 */			
		>;
	};

	pca9685pw_en_pins: pinmux_pca9685pw_en_pins {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x9B4, PIN_OUTPUT | MUX_MODE7) 			/* gpio0_20.ENABLE */
		>;
	};

	TMC2100_LA_drive_pins: pinmux_TMC2100_LA_drive_pins {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x878, PIN_OUTPUT  | MUX_MODE7)			/* (P9_12) gpio1_28.STEP_E */
			AM33XX_IOPAD(0x83C, PIN_OUTPUT  | MUX_MODE7)			/* (P8_15) gpio1_15.DIR_E */
			AM33XX_IOPAD(0x834, PIN_OUTPUT  | MUX_MODE7)			/* (P8_11) gpio1_13.STEP_H */
			AM33XX_IOPAD(0x838, PIN_OUTPUT  | MUX_MODE7)			/* (P8_16) gpio1_14.DIR_H */
			AM33XX_IOPAD(0x82C, PIN_OUTPUT  | MUX_MODE7)			/* (P8_17) gpio0_27.STEP_X */
			AM33XX_IOPAD(0x87C, PIN_OUTPUT  | MUX_MODE7)			/* (P8_26) gpio1_29.DIR_X */
			AM33XX_IOPAD(0x830, PIN_OUTPUT  | MUX_MODE7)			/* (P8_12) gpio1_12.STEP_Y */
			AM33XX_IOPAD(0x820, PIN_OUTPUT  | MUX_MODE7)			/* (P8_19) gpio0_22.DIR_Y */
			AM33XX_IOPAD(0x824, PIN_OUTPUT  | MUX_MODE7)			/* (P8_13) gpio0_23.STEP_Z */
			AM33XX_IOPAD(0x828, PIN_OUTPUT  | MUX_MODE7)			/* (P8_14) gpio0_26.DIR_Z */
			AM33XX_IOPAD(0x848, PIN_OUTPUT  | MUX_MODE7)			/* (P9_14) gpio1_18.SERVO_0 */
			AM33XX_IOPAD(0x84C, PIN_OUTPUT  | MUX_MODE7)			/* (P9_16) gpio1_19.SERVO_1 */
		>;
	};

	mcasp0_pins: mcasp0_pins {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x9ac, PIN_INPUT_PULLUP | MUX_MODE0) 		/* mcasp0_ahcklx.mcasp0_ahclkx */
			AM33XX_IOPAD(0x99c, PIN_OUTPUT_PULLDOWN | MUX_MODE2) 	/* mcasp0_ahclkr.mcasp0_axr2*/
			AM33XX_IOPAD(0x994, PIN_OUTPUT_PULLUP | MUX_MODE0) 		/* mcasp0_fsx.mcasp0_fsx */
			AM33XX_IOPAD(0x990, PIN_OUTPUT_PULLDOWN | MUX_MODE0) 	/* mcasp0_aclkx.mcasp0_aclkx */
			AM33XX_IOPAD(0x86c, PIN_OUTPUT_PULLDOWN | MUX_MODE7) 	/* gpmc_a11.GPIO1_27 */
		>;
	};

	w1_pins: pinmux_w1_pins {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x950, PIN_INPUT | MUX_MODE7)				/* (P9_22) gpio0_2.DALLAS_W1 */
        >;
    };
};

&lcdc {
	status = "okay";
	port {
		lcdc_0: endpoint@0 {
			remote-endpoint = <&hdmi_0>;
		};
	};
};

&i2c0 {
	status = "okay";
	tda19988: tda19988@70 {
		compatible = "nxp,tda998x";
		reg = <0x70>;

		pinctrl-names = "default", "off";
		pinctrl-0 = <&nxp_hdmi_bonelt_pins>;
		pinctrl-1 = <&nxp_hdmi_bonelt_off_pins>;

		#sound-dai-cells = <0>;
		audio-ports = <	TDA998x_I2S	0x03>;

		ports {
			port@0 {
				hdmi_0: endpoint@0 {
					remote-endpoint = <&lcdc_0>;
				};
			};
		};
	};
};

&i2c2 {
	status = "okay";
	pca9685: pca9685@7F {
		compatible = "nxp,pca9685-pwm";
		#pwm-cells = <2>;
		reg = <0x7F>;
		/* invert; */
		/* open-drain; */
	};
};

&rtc {
	system-power-controller;
};

&dcan1 {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&dcan1_pins>;
	pinctrl-1 = <&dcan1_stb_pins>;
};

&tscadc {
	status = "okay";

	adc {
		ti,adc-channels = <4 5 6 7>;
	};
};

&spi1 {
        status = "okay";
        pinctrl-names = "default";
        /* fsl,spi-num-chipselects = <1>; */
    	/* cs-gpios = <&gpio5 17 0>; */
        pinctrl-0 = <&spi1_pins>;
        spidev0: spi@0 {
        	compatible = "rohm,dh2228fv";
            spi-max-frequency = <24000000>;
            reg = <0>;						/* reg property is a chip select pin num*/            
        };
};

&mcasp0	{
	#sound-dai-cells = <0>;
	pinctrl-names = "default";
	pinctrl-0 = <&mcasp0_pins>;
	status = "okay";
	op-mode = <0>;	/* MCASP_IIS_MODE */
	tdm-slots = <2>;
	serial-dir = <	/* 0: INACTIVE, 1: TX, 2: RX */
			0 0 1 0
		>;
	tx-num-evt = <32>;
	rx-num-evt = <32>;
};

/ {
	
	steppers_drive_pins {
		compatible = "gpio-leds";
		status = "okay";
		pinctrl-names = "default";
		pinctrl-0 = <&TMC2100_LA_drive_pins>;		

		step_e {
			label = "STEP_E";
			gpios = <&gpio1 28 GPIO_ACTIVE_HIGH>;	/*(P9_12)*/
			default-state = "off";
		};

		dir_e {
			label = "DIR_E";
			gpios = <&gpio1 15 GPIO_ACTIVE_HIGH>;	/*(P8_15)*/
			default-state = "off";
		};

		step_h {
			label = "STEP_H";
			gpios = <&gpio1 13 GPIO_ACTIVE_HIGH>;	/*(P8_11)*/
			default-state = "off";
		};

		dir_h {
			label = "DIR_H";
			gpios = <&gpio1 14 GPIO_ACTIVE_HIGH>;	/*(P8_16)*/
			default-state = "off";
		};

		step_x {
			label = "STEP_X";
			gpios = <&gpio0 27 GPIO_ACTIVE_HIGH>;	/*(P8_17)*/
			default-state = "off";
		};

		dir_x {
			label = "DIR_X";
			gpios = <&gpio1 29 GPIO_ACTIVE_HIGH>;	/*(P8_26)*/
			default-state = "off";
		};

		step_y {
			label = "STEP_Y";
			gpios = <&gpio1 12 GPIO_ACTIVE_HIGH>;	/*(P8_12)*/
			default-state = "off";
		};

		dir_y {
			label = "DIR_Y";
			gpios = <&gpio0 22 GPIO_ACTIVE_HIGH>;	/*(P8_19)*/
			default-state = "off";
		};

		step_z {
			label = "STEP_Z";
			gpios = <&gpio0 23 GPIO_ACTIVE_HIGH>;	/*(P8_13)*/
			default-state = "off";
		};

		dir_z {
			label = "DIR_Z";
			gpios = <&gpio0 26 GPIO_ACTIVE_HIGH>;	/*(P8_14)*/
			default-state = "off";
		};

		servo_0 {
			label = "SERVO_0";
			gpios = <&gpio1 18 GPIO_ACTIVE_HIGH>;	/*(P9_14)*/
			default-state = "off";
		};

		servo_1 {
			label = "SERVO_1";
			gpios = <&gpio1 19 GPIO_ACTIVE_HIGH>;	/*(P9_16)*/
			default-state = "off";
		};
	};

	stepper_fault_pins {
		compatible = "gpio-keys";
		status = "okay";
		#address-cells = <1>;
		#size-cells = <0>;

		fault_e {
			label = "FAULT_E";
			linux,code = <0x100>;					/* BTN_0 */
			gpios = <&gpio2 1 GPIO_ACTIVE_LOW>;		/*(P8_18)*/
		};

		fault_h {
			label = "FAULT_H";
			linux,code = <0x101>;					/* BTN_1 */
			gpios = <&gpio2 3 GPIO_ACTIVE_LOW>;		/*(P8_8)*/
		};

		fault_x {
			label = "FAULT_X";
			linux,code = <0x102>;					/* BTN_2 */
			gpios = <&gpio2 4 GPIO_ACTIVE_LOW>;		/*(P8_10)*/
		};

		fault_y {
			label = "FAULT_Y";
			linux,code = <0x103>;					/* BTN_3 */
			gpios = <&gpio2 5 GPIO_ACTIVE_LOW>;		/*(P8_9)*/
		};

		fault_z {
			label = "FAULT_Z";
			linux,code = <0x104>;					/* BTN_4 */
			gpios = <&gpio2 2 GPIO_ACTIVE_LOW>;		/*(P8_7)*/
		};
	};

	proximity_switches {
		compatible = "gpio-keys";
		status = "okay";
		#address-cells = <1>;
		#size-cells = <0>;

		end_x1 {
			label = "END_STOP_X_1";
			linux,code = <0x200>;					/* KEY_NUMERIC_0 */
			gpios = <&gpio3 21 GPIO_ACTIVE_HIGH>;	/*(P9_25)*/
		};

		end_y1 {
			label = "END_STOP_Y_1";
			linux,code = <0x201>;					/* KEY_NUMERIC_1 */
			gpios = <&gpio1 17 GPIO_ACTIVE_HIGH>;	/*(P9_23)*/
		};

		end_z1 {
			label = "END_STOP_Z_1";
			linux,code = <0x202>;					/* KEY_NUMERIC_2 */
			gpios = <&gpio0 31 GPIO_ACTIVE_HIGH>;	/*(P9_13)*/
		};

		end_x2 {
			label = "END_STOP_X_2";
			linux,code = <0x203>;					/* KEY_NUMERIC_3 */
			gpios = <&gpio0 30 GPIO_ACTIVE_HIGH>;	/*(P9_11)*/
		};

		end_y2 {
			label = "END_STOP_Y_2";
			linux,code = <0x204>;					/* KEY_NUMERIC_4 */
			gpios = <&gpio3 15 GPIO_ACTIVE_HIGH>;	/*(P9_29)*/
		};

		end_z2 {
			label = "END_STOP_Z_2";
			linux,code = <0x205>;					/* KEY_NUMERIC_5 */
			gpios = <&gpio0 4 GPIO_ACTIVE_HIGH>;	/*(P9_18)*/
		};
	};

	clk_mcasp0_fixed: clk_mcasp0_fixed {
		#clock-cells = <0>;
		compatible = "fixed-clock";
		clock-frequency = <24576000>;
	};

	clk_mcasp0: clk_mcasp0 {
		#clock-cells = <0>;
		compatible = "gpio-gate-clock";
		clocks = <&clk_mcasp0_fixed>;
		enable-gpios = <&gpio1 27 0>; /* BeagleBone Black Clk enable on GPIO1_27 */
	};

	onewire@0 {
        compatible = "w1-gpio";
        status = "okay";
        reg = <0>;
        pinctrl-names   = "default";
		pinctrl-0       = <&w1_pins>;
        gpios = <&gpio0 2 GPIO_ACTIVE_HIGH>; /* (P9_22) */        
    };

	sound {
		compatible = "simple-audio-card";
		simple-audio-card,name = "TI BeagleBone Black";
		simple-audio-card,format = "i2s";
		simple-audio-card,bitclock-master = <&dailink0_master>;
		simple-audio-card,frame-master = <&dailink0_master>;

		dailink0_master: simple-audio-card,cpu {
			sound-dai = <&mcasp0>;
			clocks = <&clk_mcasp0>;
		};

		simple-audio-card,codec {
			sound-dai = <&tda19988>;
		};
	};
};
